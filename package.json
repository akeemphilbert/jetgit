{
  "name": "jetgit",
  "displayName": "JetGit",
  "description": "JetBrains IDE-style Git functionality for VS Code",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.60.0"
  },
  "categories": [
    "SCM Providers"
  ],
  "activationEvents": [
    "onStartupFinished",
    "workspaceContains:.git"
  ],
  "main": "./out/extension.js",
  "extensionDependencies": [
    "vscode.git"
  ],
  "contributes": {
    "views": {
      "scm": [
        {
          "id": "jbGit.explorer",
          "name": "Git (JetBrains)",
          "when": "config.jbGit.scmView.enabled && gitOpenRepositoryCount != 0"
        }
      ]
    },
    "commands": [
      {
        "command": "jbGit.openMenu",
        "title": "Open Git Menu",
        "category": "JetGit",
        "icon": "$(git-branch)"
      },
      {
        "command": "jbGit.updateProject",
        "title": "Update Project…",
        "category": "JetGit"
      },
      {
        "command": "jbGit.commit",
        "title": "Commit…",
        "category": "JetGit"
      },
      {
        "command": "jbGit.push",
        "title": "Push…",
        "category": "JetGit"
      },
      {
        "command": "jbGit.createBranch",
        "title": "New Branch…",
        "category": "JetGit"
      },
      {
        "command": "jbGit.checkoutRef",
        "title": "Checkout Tag or Revision…",
        "category": "JetGit"
      },
      {
        "command": "jbGit.checkoutBranch",
        "title": "Checkout Branch",
        "category": "JetGit"
      },
      {
        "command": "jbGit.mergeBranch",
        "title": "Merge Branch",
        "category": "JetGit"
      },
      {
        "command": "jbGit.rebaseBranch",
        "title": "Rebase Branch",
        "category": "JetGit"
      },
      {
        "command": "jbGit.cherryPickBranch",
        "title": "Cherry-pick Branch",
        "category": "JetGit"
      },
      {
        "command": "jbGit.deleteBranch",
        "title": "Delete Branch",
        "category": "JetGit"
      },
      {
        "command": "jbGit.createBranchFrom",
        "title": "Create Branch From",
        "category": "JetGit"
      },
      {
        "command": "jbGit.refreshSCM",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "jbGit.switchRepository",
        "title": "Switch Repository",
        "icon": "$(repo)"
      },
      {
        "command": "jbGit.createChangelist",
        "title": "Create Changelist",
        "category": "JetGit",
        "icon": "$(add)"
      },
      {
        "command": "jetgit.context.pull",
        "title": "Pull"
      },
      {
        "command": "jetgit.context.push",
        "title": "Push"
      },
      {
        "command": "jetgit.context.fetch",
        "title": "Fetch"
      },
      {
        "command": "jetgit.context.merge",
        "title": "Merge"
      },
      {
        "command": "jetgit.context.rebase",
        "title": "Rebase"
      },
      {
        "command": "jetgit.context.branches",
        "title": "Branches"
      },
      {
        "command": "jetgit.context.newBranch",
        "title": "New Branch"
      },
      {
        "command": "jetgit.context.newTag",
        "title": "New Tag"
      },
      {
        "command": "jetgit.context.showHistory",
        "title": "Show History"
      },
      {
        "command": "jetgit.context.showCurrentVersion",
        "title": "Show Current Version"
      },
      {
        "command": "jetgit.context.compareWithBranch",
        "title": "Compare with Branch"
      },
      {
        "command": "jetgit.context.compareWithRevision",
        "title": "Compare with Revision"
      },
      {
        "command": "jetgit.context.annotate",
        "title": "Annotate"
      },
      {
        "command": "jetgit.context.revert",
        "title": "Revert"
      },
      {
        "command": "jetgit.context.resetHead",
        "title": "Reset HEAD"
      },
      {
        "command": "jetgit.context.stashChanges",
        "title": "Stash Changes"
      },
      {
        "command": "jetgit.context.unstashChanges",
        "title": "Unstash Changes"
      },
      {
        "command": "jetgit.context.manageRemotes",
        "title": "Manage Remotes"
      }
    ],
    "submenus": [
      {
        "id": "jetgit.context.submenu",
        "label": "Git",
        "icon": "$(source-control)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "jbGit.openMenu",
          "when": "gitOpenRepositoryCount != 0"
        },
        {
          "command": "jbGit.updateProject",
          "when": "gitOpenRepositoryCount != 0"
        },
        {
          "command": "jbGit.commit",
          "when": "gitOpenRepositoryCount != 0"
        },
        {
          "command": "jbGit.push",
          "when": "gitOpenRepositoryCount != 0"
        },
        {
          "command": "jbGit.createBranch",
          "when": "gitOpenRepositoryCount != 0"
        },
        {
          "command": "jbGit.checkoutRef",
          "when": "gitOpenRepositoryCount != 0"
        },
        {
          "command": "jbGit.checkoutBranch",
          "when": "gitOpenRepositoryCount != 0"
        },
        {
          "command": "jbGit.mergeBranch",
          "when": "gitOpenRepositoryCount != 0"
        },
        {
          "command": "jbGit.rebaseBranch",
          "when": "gitOpenRepositoryCount != 0"
        },
        {
          "command": "jbGit.cherryPickBranch",
          "when": "gitOpenRepositoryCount != 0"
        },
        {
          "command": "jbGit.deleteBranch",
          "when": "gitOpenRepositoryCount != 0"
        },
        {
          "command": "jbGit.createBranchFrom",
          "when": "gitOpenRepositoryCount != 0"
        },
        {
          "command": "jbGit.createChangelist",
          "when": "gitOpenRepositoryCount != 0 && config.jbGit.showChangelists"
        }
      ],
      "explorer/context": [
        {
          "submenu": "jetgit.context.submenu",
          "when": "gitOpenRepositoryCount != 0",
          "group": "2_workspace"
        }
      ],
      "editor/context": [
        {
          "submenu": "jetgit.context.submenu",
          "when": "gitOpenRepositoryCount != 0",
          "group": "1_modification"
        }
      ],
      "jetgit.context.submenu": [
        {
          "command": "jetgit.context.pull",
          "group": "1_repository@1"
        },
        {
          "command": "jetgit.context.push",
          "group": "1_repository@2"
        },
        {
          "command": "jetgit.context.fetch",
          "group": "1_repository@3"
        },
        {
          "command": "jetgit.context.merge",
          "group": "1_repository@4"
        },
        {
          "command": "jetgit.context.rebase",
          "group": "1_repository@5"
        },
        {
          "command": "jetgit.context.branches",
          "group": "2_branch@1"
        },
        {
          "command": "jetgit.context.newBranch",
          "group": "2_branch@2"
        },
        {
          "command": "jetgit.context.newTag",
          "group": "2_branch@3"
        },
        {
          "command": "jetgit.context.showHistory",
          "group": "3_file@1"
        },
        {
          "command": "jetgit.context.showCurrentVersion",
          "group": "3_file@2"
        },
        {
          "command": "jetgit.context.compareWithBranch",
          "group": "3_file@3"
        },
        {
          "command": "jetgit.context.compareWithRevision",
          "group": "3_file@4"
        },
        {
          "command": "jetgit.context.annotate",
          "group": "3_file@5"
        },
        {
          "command": "jetgit.context.revert",
          "group": "3_file@6"
        },
        {
          "command": "jetgit.context.resetHead",
          "group": "4_advanced@1"
        },
        {
          "command": "jetgit.context.stashChanges",
          "group": "4_advanced@2"
        },
        {
          "command": "jetgit.context.unstashChanges",
          "group": "4_advanced@3"
        },
        {
          "command": "jetgit.context.manageRemotes",
          "group": "4_advanced@4"
        }
      ],
      "view/title": [
        {
          "command": "jbGit.switchRepository",
          "when": "view == jbGit.explorer && gitOpenRepositoryCount > 1",
          "group": "navigation@1"
        },
        {
          "command": "jbGit.refreshSCM",
          "when": "view == jbGit.explorer",
          "group": "navigation@2"
        },
        {
          "command": "jbGit.createBranch",
          "when": "view == jbGit.explorer",
          "group": "1_actions@1"
        },
        {
          "command": "jbGit.createChangelist",
          "when": "view == jbGit.explorer && config.jbGit.showChangelists",
          "group": "1_actions@2"
        }
      ],
      "view/item/context": [
        {
          "command": "jbGit.checkoutBranch",
          "when": "view == jbGit.explorer && viewItem == branch",
          "group": "1_branch@1"
        },
        {
          "command": "jbGit.mergeBranch",
          "when": "view == jbGit.explorer && viewItem == branch",
          "group": "1_branch@2"
        },
        {
          "command": "jbGit.rebaseBranch",
          "when": "view == jbGit.explorer && viewItem == branch",
          "group": "1_branch@3"
        },
        {
          "command": "jbGit.cherryPickBranch",
          "when": "view == jbGit.explorer && viewItem == branch",
          "group": "1_branch@4"
        },
        {
          "command": "jbGit.createBranchFrom",
          "when": "view == jbGit.explorer && viewItem == branch",
          "group": "2_create@1"
        },
        {
          "command": "jbGit.deleteBranch",
          "when": "view == jbGit.explorer && viewItem == branch",
          "group": "3_modify@1"
        }
      ]
    },
    "keybindings": [
      {
        "command": "jbGit.openMenu",
        "key": "ctrl+shift+g ctrl+shift+m",
        "mac": "cmd+shift+g cmd+shift+m",
        "when": "gitOpenRepositoryCount != 0"
      },
      {
        "command": "jbGit.updateProject",
        "key": "ctrl+shift+g u",
        "mac": "cmd+shift+g u",
        "when": "gitOpenRepositoryCount != 0"
      },
      {
        "command": "jbGit.commit",
        "key": "ctrl+shift+g c",
        "mac": "cmd+shift+g c",
        "when": "gitOpenRepositoryCount != 0"
      },
      {
        "command": "jbGit.push",
        "key": "ctrl+shift+g p",
        "mac": "cmd+shift+g p",
        "when": "gitOpenRepositoryCount != 0"
      },
      {
        "command": "jbGit.createBranch",
        "key": "ctrl+shift+g b",
        "mac": "cmd+shift+g b",
        "when": "gitOpenRepositoryCount != 0"
      }
    ],
    "configuration": {
      "title": "JetGit",
      "properties": {
        "jbGit.statusBar.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the JetGit status bar item"
        },
        "jbGit.scmView.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable the JetGit SCM view"
        },
        "jbGit.updateProject.mode": {
          "type": "string",
          "enum": [
            "pull",
            "pullRebase",
            "fetchRebaseInteractive"
          ],
          "default": "pullRebase",
          "description": "Mode for Update Project operation"
        },
        "jbGit.showChangelists": {
          "type": "boolean",
          "default": false,
          "description": "Show changelists in SCM view and menus"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "esbuild src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node --sourcemap",
    "watch": "npm run compile -- --watch",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "jest",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "jest --testPathPattern=e2e --timeout=300000",
    "test:performance": "jest --testPathPattern=performance --timeout=300000",
    "test:all": "ts-node tests/test-runner.ts",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.28.3",
    "@babel/preset-typescript": "^7.27.1",
    "@types/jest": "^29.5.0",
    "@types/node": "16.x",
    "@types/vscode": "^1.103.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "babel-jest": "^30.0.5",
    "esbuild": "^0.17.0",
    "eslint": "^8.28.0",
    "jest": "^29.5.0",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.0",
    "typescript": "^4.9.4"
  }
}