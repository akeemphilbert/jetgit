name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: npm run lint

    - name: Compile TypeScript
      run: npm run compile

    - name: Run unit tests
      run: npm run test:unit

    - name: Run integration tests
      run: npm run test:integration

    - name: Run performance tests
      run: npm test -- --testPathPattern="tests/performance" --timeout=180000

    - name: Generate coverage report
      run: npm test -- --coverage --coverageReporters=lcov

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Archive test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.node-version }}
        path: |
          test-results.json
          coverage/
          
  e2e-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup Xvfb (for VS Code tests)
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb

    - name: Run end-to-end tests
      run: xvfb-run -a npm test -- --testPathPattern="tests/e2e" --timeout=300000
      env:
        DISPLAY: ':99.0'

    - name: Archive E2E test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: e2e-test-results
        path: test-results.json

  performance-benchmark:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run performance benchmarks
      run: npm test -- --testPathPattern="tests/performance" --timeout=300000 --verbose

    - name: Archive performance results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: performance-results
        path: test-results.json

  test-summary:
    runs-on: ubuntu-latest
    needs: [test, e2e-test, performance-benchmark]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Download all test artifacts
      uses: actions/download-artifact@v3

    - name: Generate comprehensive test report
      run: |
        echo "# Test Summary Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Test Results by Platform" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        for dir in test-results-*; do
          if [ -d "$dir" ]; then
            echo "### $dir" >> $GITHUB_STEP_SUMMARY
            if [ -f "$dir/test-results.json" ]; then
              node -e "
                const fs = require('fs');
                const results = JSON.parse(fs.readFileSync('$dir/test-results.json', 'utf8'));
                console.log(\`- **Total Tests:** \${results.summary.totalTests}\`);
                console.log(\`- **Passed:** \${results.summary.passed}\`);
                console.log(\`- **Failed:** \${results.summary.failed}\`);
                console.log(\`- **Pass Rate:** \${results.summary.passRate}%\`);
                console.log(\`- **Duration:** \${(results.summary.duration / 1000).toFixed(2)}s\`);
              " >> $GITHUB_STEP_SUMMARY
            fi
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
        done

    - name: Check test status
      run: |
        # Check if any tests failed
        failed=false
        for dir in test-results-*; do
          if [ -d "$dir" ] && [ -f "$dir/test-results.json" ]; then
            failures=$(node -e "
              const fs = require('fs');
              const results = JSON.parse(fs.readFileSync('$dir/test-results.json', 'utf8'));
              console.log(results.summary.failed);
            ")
            if [ "$failures" -gt 0 ]; then
              failed=true
              break
            fi
          fi
        done
        
        if [ "$failed" = true ]; then
          echo "❌ Some tests failed"
          exit 1
        else
          echo "✅ All tests passed"
        fi